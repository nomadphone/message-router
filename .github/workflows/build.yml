name: build

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

env:
  REGISTRY_USER: ${{ github.actor }}
  REGISTRY_PASSWORD: ${{ github.token }}
  IMAGE_REGISTRY: ghcr.io/${{ github.repository_owner }}

jobs:
  lint-and-test:
    name: lint and test
    runs-on: ubuntu-latest
    steps:
      - name: check out code
        uses: actions/checkout@v2
    
      - name: set up Go 1.x
        uses: actions/setup-go@v2
        with:
          go-version: 1.19

      - name: Verify dependencies
        run: go mod verify

      - name: build
        run: go build -v ./...
  
      - name: gofmt
        run: if [ "$(gofmt -s -l . | wc -l)" -gt 0 ]; then exit 1; fi

      - name: staticcheck
        run: |
          go install honnef.co/go/tools/cmd/staticcheck@latest
          staticcheck ./...

      - name: lint
        run: |
          go install golang.org/x/lint/golint@latest
          golint $(go list ./... | grep -v /vendor/)

      - name: vet
        run: go vet $(go list ./... | grep -v /vendor/)

      - name: test
        run: go test -v  -covermode=atomic -coverprofile=coverage.out ./...
        
      - name: Codecov
        uses: codecov/codecov-action@v3.1.1

  build:
    name: build container 
    runs-on: ubuntu-latest
    permissions:
      packages: write
      contents: read
    steps:
      - name: check out code
        uses: actions/checkout@v2

      - name: build image
        run: |
          podman build -t message-router .
          podman tag message-router ${{ env.IMAGE_REGISTRY }}/message-router:${{ github.sha }}

      - name: login to registry
        uses: redhat-actions/podman-login@v1
        if: github.ref == 'refs/heads/main'
        with:
          username: ${{ env.REGISTRY_USER }}
          password: ${{ env.REGISTRY_PASSWORD }}
          registry: ${{ env.IMAGE_REGISTRY }}
      
      - name: push if main
        if: github.ref == 'refs/heads/main'
        run: |
          podman push ${{ env.IMAGE_REGISTRY }}/message-router:${{ github.sha }}

